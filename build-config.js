/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ config.js –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –Ω–∞ Vercel
 */

const fs = require('fs');
const path = require('path');

// –ü–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
// Vercel –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–¥–∞: API_KEY_1, API_KEY_2, API_KEY_3, etc.
function getApiKeysFromEnv() {
    const keys = [];
    let i = 1;
    
    while (process.env[`API_KEY_${i}`]) {
        const key = process.env[`API_KEY_${i}`];
        // –ö–æ–¥–∏—Ä—É–µ–º –≤ Base64
        const encoded = Buffer.from(key).toString('base64');
        keys.push(encoded);
        i++;
    }
    
    return keys;
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±: –≤—Å–µ –∫–ª—é—á–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
function getApiKeysFromSingleEnv() {
    const apiKeysEnv = process.env.API_KEYS;
    if (!apiKeysEnv) return [];
    
    return apiKeysEnv
        .split(',')
        .map(key => key.trim())
        .filter(key => key.length > 0)
        .map(key => Buffer.from(key).toString('base64'));
}

// –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–∞ —Å–ø–æ—Å–æ–±–∞
let encodedKeys = getApiKeysFromEnv();
if (encodedKeys.length === 0) {
    encodedKeys = getApiKeysFromSingleEnv();
}

if (encodedKeys.length === 0) {
    console.warn('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
    console.warn('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Vercel:');
    console.warn('  - API_KEY_1, API_KEY_2, API_KEY_3 (–æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)');
    console.warn('  - –∏–ª–∏ API_KEYS (–≤—Å–µ –∫–ª—é—á–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)');
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ config.js
const configContent = `/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å API –∫–ª—é—á–∞–º–∏
 * ‚ö†Ô∏è –ù–ï –ü–£–ë–õ–ò–ö–£–ô–¢–ï –≠–¢–û–¢ –§–ê–ô–õ –í –û–¢–ö–†–´–¢–û–ú –†–ï–ü–û–ó–ò–¢–û–†–ò–ò!
 * –î–æ–±–∞–≤—å—Ç–µ config.js –≤ .gitignore
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –Ω–∞ Vercel
 * –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.
 */

// –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ API –∫–ª—é—á–∏ (Base64 –¥–ª—è –±–∞–∑–æ–≤–æ–π –∑–∞—â–∏—Ç—ã)
const ENCODED_API_KEYS = [
${encodedKeys.map(key => `    "${key}"`).join(',\n')}
];

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ API –∫–ª—é—á–∏
 */
function getApiKeys() {
    try {
        return ENCODED_API_KEYS.map(encoded => atob(encoded));
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è API –∫–ª—é—á–µ–π');
        return [];
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.API_CONFIG = {
    getKeys: getApiKeys
};
`;

// –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const configDir = path.join(__dirname, 'js');
if (!fs.existsSync(configDir)) {
    fs.mkdirSync(configDir, { recursive: true });
}

// –ó–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª
const configPath = path.join(configDir, 'config.js');
fs.writeFileSync(configPath, configContent, 'utf8');

console.log(`‚úÖ config.js —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ ${configPath}`);
console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π: ${encodedKeys.length}`);

